<?php

namespace Home\OrderBundle\Entity;

use ApiPlatform\Core\Annotation\ApiResource;
use Doctrine\ORM\Mapping as ORM;
use Home\MediaBundle\Entity\Image;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Serializer\Annotation\Groups;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Shop
 *
 * @ApiResource(attributes={"normalization_context"={"groups"={"shop"}}})
 * @ORM\Table(name="shop")
 * @ORM\Entity
 * @UniqueEntity(fields={"name"})
 */
class Shop
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @Assert\NotBlank
     * @Assert\Length(max="255")
     * @Groups({"shop"})
     * @ORM\Column(name="name", type="string", length=255, unique=true)
     */
    private $name;

    /**
     * @var string
     *
     * @Assert\Url
     * @Assert\Length(max="255")
     * @Groups({"shop"})
     * @ORM\Column(name="url", type="string", length=255, nullable=true)
     */
    private $url;

    /**
     * @var string
     *
     * @Groups({"shop"})
     * @ORM\Column(name="comment", type="text", nullable=true)
     */
    private $comment;

    /**
     * @var Media
     *
     * @Groups({"shop"})
     * @ORM\ManyToOne(targetEntity="Home\MediaBundle\Entity\Media")
     * @ORM\JoinColumn(name="icon_id", referencedColumnName="id")
     */
    private $icon;


    public function getId(): int
    {
        return $this->id;
    }

    public function setName(string $name): Shop
    {
        $this->name = $name;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setUrl(string $url): Shop
    {
        $this->url = $url;

        return $this;
    }

    public function getUrl(): string
    {
        return $this->url ?: '';
    }

    public function setComment(string $comment): Shop
    {
        $this->comment = $comment;

        return $this;
    }

    public function getComment(): string
    {
        return $this->comment ?: '';
    }
}
